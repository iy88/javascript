Array.prototype.searchelement=function(element,auto,begin_index,end_index){let indexs=[];if(!0===auto)for(let index=0;index<this.length;index++)this[index]===element&&(indexs[indexs.length]=index);else if(!1===auto)for(let index=begin_index;index<end_index;index++)this[index]===element&&(indexs[indexs.length]=index);else console.error("search element error");return indexs};let lcs=(wordX,wordY)=>{const m=wordX.length,n=wordY.length,l=[];for(let i=0;i<=m;i++){l[i]=[];for(let j=0;j<=n;j++)l[i][j]=0}for(let i=0;i<=m;i++)for(let j=0;j<=n;j++)if(0===i||0===j)l[i][j]=0;else if(wordX[i-1]===wordY[j-1])l[i][j]=l[i-1][j-1]+1;else{const a=l[i-1][j],b=l[i][j-1];l[i][j]=a>b?a:b}return l[m][n]};function countingSort(array){let arr=array.slice(0);if(arr){if(arr.length<2)return arr;{function findMaxValue(array){let max=array[0];for(let i=1;i<array.length;i++)array[i]>max&&(max=array[i]);return max}const maxValue=findMaxValue(arr),counts=new Array(maxValue+1);arr.forEach(element=>{counts[element]||(counts[element]=0),counts[element]++});let sortedIndex=0;return counts.forEach((count,i)=>{for(;count>0;)arr[sortedIndex++]=i,count--}),arr}}}function bubbleSort(array){let arr=array.slice(0);if(arr)for(let count=0;count<arr.length-1;count++){let over=!0;for(let i=0;i<arr.length;i++)if(arr[i]>arr[i+1]){let temp=arr[i];arr[i]=arr[i+1],arr[i+1]=temp,over=!1}if(over)break}else console.error(`bubbleSort: unkown array '${arr}'`);return arr}function ms(word1,word2){let str1=word1,str2=word2,length=0,fi=str1.indexOf(str2[0]);if(-1!=fi){length=1;for(let i=fi+1;i<str2.length;i++)for(let j=fi+1;j<str1.length&&str1[j]===str2[i];j++)length++}return length}function analysis(arr,r){for(let i=0;i<arr.length;i++)Array.isArray(arr[i])?analysis(arr[i],r):r[r.length]=arr[i]}function search(){let d=arguments[0],s=arguments[1],first=-1,last=-1,best=[],indexs=[],lcsresult=[],lcssort,sortresult=[],bestindexs=[],weightresult=[],weightsort=[],weightsortresult=[];for(let ap=0;ap<d.length;ap++)d[ap]===s&&(best[best.length]=ap);for(let searchdataindex=0;searchdataindex<d.length;searchdataindex++)lcsresult[lcsresult.length]=lcs(d[searchdataindex],s);lcssort=countingSort(lcsresult);for(let i=0;i<lcssort.length;i++)0!=lcssort[i]&&sortresult.push(...lcsresult.searchelement(lcssort[i],!0));for(let searchdataindex=0;searchdataindex<d.length;searchdataindex++)weightresult[weightresult.length]=ms(d[searchdataindex],s)/d[searchdataindex].length;weightsort=bubbleSort(weightresult);for(let i=0;i<weightsort.length;i++)0!=weightsort[i]&&weightsortresult.push(...weightresult.searchelement(weightsort[i],!0));return bestindexs=weightsortresult.DeleteDuplication().reverse(),indexs=sortresult.DeleteDuplication(),{first:void 0===(first=sortresult[0])?-1:first,last:void 0===(last=sortresult[sortresult.length-1])?-1:last,lcsindexs:indexs,best:best=best||-1,msindexs:bestindexs}}function Multidimensionalarraysearch(){let d=arguments[0],q=arguments[1],r=[];return analysis(d,r),{result:search(r,q),analysisarray:r}}Array.prototype.DeleteDuplication=function(){let arr=[];for(var i=0;i<this.length;i++)-1===arr.indexOf(this[i])&&arr.push(this[i]);return arr};